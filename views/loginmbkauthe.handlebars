<!DOCTYPE html>
<html lang="en">
{{> script/showmessage }}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Log in to portal.mbktechstudio.com to access your resources and manage projects securely.">
    <meta name="keywords" content="MBK Tech Studio, Web-Portal, Web, Portal, Admin-Panel, Admin, login">
    <meta property="og:title" content="Login | MBK Tech Studio" />
    <meta property="og:image" content="https://www.mbktechstudio.com/Assets/Images/Icon/logo.png" />
    <meta property="og:url" content="https://portal.mbktechstudio.com/login">
    <title>Login | MBK Tech Studio Portal</title>
    <link rel="icon" type="image/x-icon" href="https://mbktechstudio.com/Assets/Images/Icon/dgicon.svg">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a0ca3;
            --primary-light: rgba(67, 97, 238, 0.1);
            --secondary: #f72585;
            --secondary-light: rgba(247, 37, 133, 0.1);
            --dark: #121212;
            --dark-light: #1e1e1e;
            --darker: #0a0a0a;
            --light: #f8f9fa;
            --lighter: #ffffff;
            --gray: #cccccc;
            --gray-dark: #888888;
            --success: #4cc9f0;
            --warning: #f8961e;
            --danger: #ef233c;
            --gradient: linear-gradient(135deg, var(--primary), var(--secondary));
            --glass: rgba(30, 30, 30, 0.5);
            --glass-border: rgba(255, 255, 255, 0.1);
            --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.1);
            --shadow-sm: 0 4px 6px rgba(0, 0, 0, 0.1);
            --shadow-md: 0 8px 30px rgba(0, 0, 0, 0.2);
            --shadow-lg: 0 15px 40px rgba(0, 0, 0, 0.3);
            --radius-sm: 8px;
            --radius-md: 12px;
            --radius-lg: 16px;
            --radius-xl: 24px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: var(--dark);
            color: var(--light);
            line-height: 1.6;
            overflow-x: hidden;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            transition: var(--transition);
            background: linear-gradient(to bottom, rgba(10, 10, 10, 0.9), rgba(10, 10, 10, 0.7));
            backdrop-filter: blur(10px);
            border-bottom: 1px solid var(--glass-border);
        }

        nav {
            padding: 10px 5%;
            max-width: 1400px;
            margin: 0 auto;
        }

        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .logo img {
            height: 30px;
            width: auto;
            transition: var(--transition);
        }

        .logo:hover img {
            transform: rotate(15deg);
        }

        .logo-text {
            font-size: 1.8rem;
            font-weight: 700;
            background: var(--gradient);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .login-container {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 120px 5% 80px;
            position: relative;
            overflow: hidden;
            background: radial-gradient(circle at 70% 20%, rgba(67, 97, 238, 0.15), transparent 60%);
        }

        .login-box {
            background: var(--dark-light);
            border-radius: var(--radius-xl);
            padding: 2rem;
            width: 100%;
            max-width: 500px;
            box-shadow: var(--shadow-lg);
            border: .125rem solid var(--glass-border);
            position: relative;
            z-index: 2;
            transition: var(--transition);
        }

        .login-box:hover {
            box-shadow: var(--shadow-lg);
        }

        .login-title {
            text-align: center;
            margin-bottom: 2rem;
            font-size: 2rem;
            position: relative;
            color: var(--lighter);
        }

        .login-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 4px;
            background: var(--gradient);
            border-radius: 2px;
        }

        .form-group {
            position: relative;
            margin-bottom: 1rem;
        }

        .form-input {
            width: 100%;
            padding: 12px 20px;
            background: var(--darker);
            border: 2px solid var(--glass-border);
            border-radius: var(--radius-sm);
            color: var(--light);
            font-size: 1rem;
            transition: var(--transition);
        }

        .form-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px var(--primary-light);
        }

        .form-label {
            position: absolute;
            top: 15px;
            left: 20px;
            color: var(--gray);
            transition: var(--transition);
            pointer-events: none;
        }

        .form-input:focus+.form-label,
        .form-input:not(:placeholder-shown)+.form-label {
            top: -10px;
            left: 15px;
            font-size: 0.8rem;
            background: var(--dark-light);
            padding: 0 5px;
            color: var(--primary);
        }

        .input-icon {
            position: absolute;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
            cursor: pointer;
            transition: var(--transition);
        }

        .input-icon:hover {
            color: var(--primary);
        }

        .btn-login {
            width: 100%;
            padding: 10px;
            border-radius: var(--radius-sm);
            background: var(--primary);
            color: white;
            font-weight: 600;
            font-size: 1rem;
            border: none;
            cursor: pointer;
            transition: var(--transition);
            box-shadow: var(--shadow-sm);
        }

        .btn-login:hover {
            background: var(--primary-dark);
            box-shadow: var(--shadow-md);
        }

        .btn-login:disabled {
            background: var(--gray-dark);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .login-links {
            display: flex;
            justify-content: space-between;
            margin-top: 1.5rem;
            font-size: 0.9rem;
        }

        .login-link {
            color: var(--gray);
            transition: var(--transition);
        }

        .login-link:hover {
            color: var(--primary);
        }

        .terms-info {
            margin-top: 2rem;
            font-size: 0.8rem;
            color: var(--gray);
            text-align: center;
        }

        .terms-link {
            color: var(--primary);
            font-weight: 500;
        }

        .recaptcha-container {
            margin: 1rem 0;
            display: flex;
            justify-content: center;
        }

        .token-container {
            animation: fadeInUp 0.4s ease-out;
        }

        .token-container.disable {
            display: none;
        }

        .token-container.enable {
            display: block;
        }

        .ai-element {
            position: absolute;
            opacity: 0.1;
            z-index: 1;
            animation: float 6s ease-in-out infinite;
        }

        .ai-element:nth-child(1) {
            top: 20%;
            left: 10%;
            font-size: 5rem;
            animation-delay: 0s;
        }

        .ai-element:nth-child(2) {
            top: 60%;
            left: 80%;
            font-size: 4rem;
            animation-delay: 1s;
        }

        .ai-element:nth-child(3) {
            top: 30%;
            left: 70%;
            font-size: 3rem;
            animation-delay: 2s;
        }

        .ai-element:nth-child(4) {
            top: 80%;
            left: 20%;
            font-size: 6rem;
            animation-delay: 3s;
        }

        @keyframes float {

            0%,
            100% {
                transform: translateY(0) rotate(0deg);
            }

            50% {
                transform: translateY(-20px) rotate(5deg);
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @media (max-width: 768px) {
            .login-box {
                padding: 2rem;
            }

            .login-title {
                font-size: 1.8rem;
            }
        }

        @media (max-width: 576px) {
            .login-box {
                padding: 1.5rem;
                border-radius: var(--radius-lg);
            }

            .login-links {
                flex-direction: column;
                gap: 0.5rem;
                align-items: center;
            }
        }

        .remember-me {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            margin: 1rem 0;
        }

        .remember-me input[type="checkbox"] {
            appearance: none;
            -webkit-appearance: none;
            width: 18px;
            height: 18px;
            border: 2px solid var(--glass-border);
            border-radius: var(--radius-sm);
            margin-right: 10px;
            cursor: pointer;
            position: relative;
            transition: var(--transition);
        }

        .remember-me input[type="checkbox"]:checked {
            background-color: var(--primary);
            border-color: var(--primary);
        }

        .remember-me input[type="checkbox"]:checked::after {
            content: '\f00c';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 10px;
        }

        .remember-me label {
            color: var(--gray);
            cursor: pointer;
            transition: var(--transition);
            font-size: 0.9rem;
        }

        .remember-me label:hover {
            color: var(--light);
        }
        
        .WarningboxInfo {
            background: var(--dark-light);
            border: 0.5px solid var(--warning);
            border-left: 4px solid var(--warning);
            padding: 0.75rem 1rem;
            border-radius: var(--radius-sm);
            color: var(--warning);
            font-size: 0.9rem;
            font-weight: 500;
            margin-top: 1rem;
            text-align: center;
            box-shadow: var(--shadow-sm);
        }
    </style>
</head>

<body>
    <header>
        <nav>
            <div class="navbar">
                <a class="logo">
                    <img src="https://mbktechstudio.com/Assets/Images/Icon/dgicon.svg" alt="MBK Tech Studio Logo">
                    <span class="logo-text">MBK Authe</span>
                </a>
            </div>
        </nav>
    </header>

    <section class="login-container">

        <i class="fas fa-robot ai-element"></i>
        <i class="fas fa-microchip ai-element"></i>
        <i class="fas fa-user-astronaut ai-element"></i>
        <i class="fas fa-satellite-dish ai-element"></i>
        <i class="fas fa-cloud ai-element"></i>
        <i class="fas fa-shield-alt ai-element"></i>

        <div class="login-box">
            <h1 class="login-title">Login</h1>

            <form id="loginForm" method="POST">
                <div class="form-group">
                    <input id="loginUsername" class="form-input" type="text" name="username" placeholder=" " required
                        pattern="^[a-z0-9.]+$"
                        title="Username must contain lowercase letters, numbers, and periods only, no spaces, no special characters."
                        oninput="this.value = this.value.toLowerCase().replace(/[^a-z0-9.]/g, '')" />
                    <label class="form-label">Username</label>
                    <i class="fas fa-info-circle input-icon" onclick="usernameinfo()"></i>
                </div>

                <div class="form-group">
                    <input id="loginPassword" class="form-input" type="password" name="Password" placeholder=" "
                        required />
                    <label class="form-label">Password</label>
                    <i class="fas fa-eye input-icon" id="togglePassword"></i>
                </div>

                <div class="form-group token-container disable" id="tokenCon">
                    <input id="token" class="form-input" type="text" name="token" placeholder=" " pattern="\d{6}"
                        title="Token must be exactly 6 digits" maxlength="6" minlength="6" />
                    <label class="form-label">2FA Token</label>
                    <i class="fas fa-info-circle input-icon" onclick="tokeninfo()"></i>
                </div>

                <div class="recaptcha-container">
                    <div class="g-recaptcha" data-theme="dark" data-sitekey="6LfhaPgqAAAAAPgOw7r3rNOHKKfh5d7K3MMJeUHo">
                    </div>
                </div>

                <div class="form-group remember-me">
                    <input type="checkbox" id="rememberMe" name="rememberMe">
                    <label for="rememberMe">Remember me</label>
                </div>

                <button type="submit" class="btn-login" id="loginButton">
                    <span id="loginButtonText">Login</span>
                </button>

                {{#if userLoggedIn }}
                <div class="WarningboxInfo">
                    You Are Already Logged In With username
                    <span class="username">"<span id="headerProfileUserName">{{username}}</span>"</span>. Go To
                    <a class="terms-link" href="/home">Home Page</a>
                </div>
                {{/if }}

                <div class="login-links">
                    <a onclick="fpass()" class="login-link">Forgot Password?</a>
                    <a href="https://www.mbktechstudio.com/Support" target="_blank" class="login-link">Need Help?</a>
                </div>

                <p class="terms-info">
                    By logging in, you agree to our
                    <a href="/info/Terms&Conditions" target="_blank" class="terms-link">Terms & Conditions</a>
                    and
                    <a href="/info/PrivacyPolicy" target="_blank" class="terms-link">Privacy Policy</a>.
                </p>
            </form>
        </div>
    </section>

    <script>

        // Toggle password visibility
        const togglePassword = document.getElementById('togglePassword');
        const passwordInput = document.getElementById('loginPassword');

        togglePassword.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            togglePassword.classList.toggle('fa-eye');
            togglePassword.classList.toggle('fa-eye-slash');
        });

        function fpass() {
            showMessage(`If you have forgotten your password, please contact support at <a href="https://www.mbktechstudio.com/Support" target="_blank">https://www.mbktechstudio.com/Support</a> to reset it.`, `Forgot Password`);
        }

        // Info dialogs
        function usernameinfo() {
            showMessage(`If you are a member of the MBK Tech Studio team, your username is the first part of your email address (e.g., for abc.xyz@mbktechstudio.com, your username is abc.xyz). If you are a guest or have forgotten your username and password, please contact support.`, `What is my username?`);
        }

        function tokeninfo() {
            showMessage(`The 2FA token is a 6-digit code generated by your authenticator app (such as Google Authenticator, Microsoft Authenticator, or Authy). Enter the code shown in your app to complete login. If you have not set up 2FA or are having trouble, please contact support.`, `What is the 2FA token?`);
        }

        // Form submission
        document.getElementById('loginForm').addEventListener('submit', function (event) {
            event.preventDefault();

            const username = document.getElementById('loginUsername').value.trim();
            const password = document.getElementById('loginPassword').value.trim();
            const token = document.getElementById('token') ? document.getElementById('token').value.trim() : '';
            const recaptchaResponse = grecaptcha.getResponse();
            const loginButton = document.getElementById('loginButton');
            const loginButtonText = document.getElementById('loginButtonText');
            const rememberMe = document.getElementById('rememberMe').checked;


            if (!username || !password) {
                showMessage('Username and password are required', 'Login Error');
                return;
            }

            loginButton.disabled = true;
            loginButtonText.textContent = 'Authenticating...';

            fetch('/mbkauthe/api/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    username,
                    password,
                    token,
                    recaptcha: recaptchaResponse
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        loginButtonText.textContent = 'Success! Redirecting...';
                        sessionStorage.setItem('sessionId', data.sessionId);

                        if (rememberMe) {
                            localStorage.setItem('rememberedUsername', username);
                        } else {
                            localStorage.removeItem('rememberedUsername');
                        }
                        
                        // Redirect to the appropriate page
                        const redirectUrl = new URLSearchParams(window.location.search).get('redirect');
                        window.location.href = redirectUrl ? decodeURIComponent(redirectUrl) : '{{customURL}}';

                        loginButton.disabled = false;
                        loginButtonText.textContent = 'Login';
                    } else {
                        // Handle errors
                        grecaptcha.reset();
                        loginButton.disabled = false;
                        loginButtonText.textContent = 'Login';

                        if (data.message === "Please Enter 2FA code") {
                            console.log('2FA required');
                            document.getElementById('tokenCon').classList.remove('disable');
                            document.getElementById('tokenCon').classList.add('enable');
                            document.getElementById('tokenCon').style.animation = 'fadeInUp 0.4s ease-out';
                            showMessage('Please enter your 2FA token', '2FA Required');
                        } else {
                            showMessage(data.message || 'Login failed. Please try again.', 'Login Error');
                        }
                    }
                })
                .catch(error => {
                    grecaptcha.reset();
                    loginButton.disabled = false;
                    loginButtonText.textContent = 'Login';
                    console.error('Error:', error);
                    showMessage('An error occurred. Please try again.', 'Login Error');
                });
        });

        // Check for URL parameters
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const usernameFromUrl = urlParams.get('username');
            const passwordFromUrl = urlParams.get('password');

            if (usernameFromUrl) {
                document.getElementById('loginUsername').value = usernameFromUrl;
            }

            if (passwordFromUrl) {
                document.getElementById('loginPassword').value = passwordFromUrl;
            }
        });
        // Auto focus on the first empty field
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const usernameFromUrl = urlParams.get('username');
            const passwordFromUrl = urlParams.get('password');
            const usernameInput = document.getElementById('loginUsername');

            if (usernameFromUrl) {
                usernameInput.value = usernameFromUrl;
            }

            if (passwordFromUrl) {
                document.getElementById('loginPassword').value = passwordFromUrl;
            }

            // Automatically focus the username field
            usernameInput.focus();
        });
        //Remember me functionality
        document.addEventListener('DOMContentLoaded', function () {
            const urlParams = new URLSearchParams(window.location.search);
            const usernameFromUrl = urlParams.get('username');
            const passwordFromUrl = urlParams.get('password');
            const usernameInput = document.getElementById('loginUsername');

            // Check for remembered username in localStorage
            const rememberedUsername = localStorage.getItem('rememberedUsername');
            if (rememberedUsername) {
                usernameInput.value = rememberedUsername;
                document.getElementById('rememberMe').checked = true;
            }

            if (usernameFromUrl) {
                usernameInput.value = usernameFromUrl;
            }

            if (passwordFromUrl) {
                document.getElementById('loginPassword').value = passwordFromUrl;
            }

            // Automatically focus the first empty field
            if (!usernameInput.value) {
                usernameInput.focus();
            } else {
                document.getElementById('loginPassword').focus();
            }
        });
    </script>
</body>

</html>