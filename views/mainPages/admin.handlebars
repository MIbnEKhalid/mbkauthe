<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Home page with authentication and role-based access control.">
    <meta name="author" content="Your Name">
    <title>Admin</title>
    <script src="/Assets/Scripts/logout.js"></script>
    <style>
        /* GitHub Dark Theme Inspired Styles */
        body {
            background-color: #0d1117;
            /* Dark background */
            color: #c9d1d9;
            /* Light gray text */
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
        }

        h1 {
            color: #58a6ff;
            /* Bright blue for headings */
            text-align: center;
            margin-top: 20px;
        }

        p {
            color: #8b949e;
            /* Muted gray for paragraphs */
            text-align: center;
            margin: 10px 0;
        }

        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: #161b22;
            /* Slightly lighter dark box */
            border: 1px solid #30363d;
            /* Border matching GitHub theme */
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }

        button {
            background-color: #238636;
            /* Green button */
            color: #ffffff;
            /* White text */
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            display: block;
            margin: 20px auto;
            border-radius: 6px;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #2ea043;
            /* Lighter green on hover */
        }

        a {
            display: block;
            text-align: center;
            margin: 10px 0;
            color: #58a6ff;
            transition: color 0.3s ease;
        }

        a:hover {
            color: #79c0ff;
            /* Lighter blue on hover */
            text-decoration: underline;
        }

        .role-box {
            background-color: #21262d;
            /* Darker box for role display */
            padding: 15px;
            border-radius: 6px;
            margin: 10px 0;
            text-align: center;
            border: 1px solid #30363d;
        }

        .role-box h1 {
            margin: 0;
        }

        .output {
            color: #8fff79;
            font-weight: 600 !important;
            font-size: 1em !important;
            text-align: center;
            margin-top: 10px;
        }
        .container p{
            color: #79c0ff;
            font-weight: bold;
            font-size: 1.2em;
            text-align: center;
            margin-top: 10px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>This Page Is Protected And Requires Authentication and Role SuperAdmin</h1>


        <p>UserName From Backend: <span class="output">{{UserName}}</span></p>
        <p>UserName From Cookie: <span class="output" id="userNamefromCookie"></span></p>
        <p>User Role: <span class="output">{{Role}}</span></p>

        <button onclick="logout()" aria-label="Logout">Logout</button>
        <a href="/admin" aria-label="Admin Page">/admin (Requires Auth And Role SuperAdmin)</a>
        <a href="/home" aria-label="Home Page">/home (Requires Auth)</a>
    </div>
    </div>


    <script>
        function getCookieValue(cookieName) {
            console.log(`Attempting to retrieve cookie: ${cookieName}`);
            const cookies = document.cookie.split('; ');
            console.log('All cookies:', cookies);
            for (let cookie of cookies) {
                const [name, value] = cookie.split('=');
                console.log(`Checking cookie - Name: ${name}, Value: ${value}`);
                if (name === cookieName) {
                    console.log(`Cookie found: ${name}=${value}`);
                    return decodeURIComponent(value);
                }
            }
            console.log(`Cookie not found: ${cookieName}`);
            return null; // Return null if the cookie is not found
        }
        // Wait for DOM content to load before executing
        document.addEventListener('DOMContentLoaded', () => {
            const userNameFromCookie = getCookieValue('username');
            const userNameElement = document.getElementById('userNamefromCookie');

            if (userNameFromCookie) {
                userNameElement.textContent = userNameFromCookie;
            } else {
                userNameElement.textContent = 'Cookie not found';
            }
        });
    </script>
</body>

</html>